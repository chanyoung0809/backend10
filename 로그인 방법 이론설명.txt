- 쿠키 / 세션(session)

모든 홈페이지 상의 정보는 해당 서버 컴퓨터에 저장됨.
웹브라우저에서 요청(request)하면, 
서버컴퓨터가 응답(response)함

홈페이지 내에서 경로 이동할 때 로그인/로그아웃 상태를 유지되게 하는 변수가 세션
-> 홈페이지에서는 로그인한 id로 세션이라는 변수를 만들어주고,
-> 해당 컴퓨터 웹브라우저에서는 로그인한 id로 쿠키라는 변수를 만들어줌

그래서 컴퓨터의 쿠키와, 세션을 페이지 이동할때마다 체크해줌

1. 로그인 시 입력한 아이디와 비밀번호가
데이터베이스의 아이디와 비밀번호와 같은지 체크해줌

2-1. 맞으면 서버컴퓨터에 내가 입력한 아이디와 비밀번호로 고유한 세션변수를 하나 생성해줌
session <- 언제 로그인했나, 어디서 로그인했는지, 아이디는 뭐고, 비밀번호는 뭐인지...
세션변수는 휘발성(일반적인 js 변수는 재시작하면 날아가지만, 세션 변수는 그렇지 않음)이 아니기 때문에 창을 껐다 켜도 로그인 상태가 유지됨.

2-2 동시에 로그인한 사용자의 웹브라우저에는 쿠키라는 변수가 생성됨. 이는 내 컴퓨터에 저장됨.
쿠키는 유효기한이 존재함. (접속 기록 삭제, 쿠키 삭제...)
쿠키에 있는 사용자의 데이터와 서버에 있는 세션 변수를 체크했을 때 맞으면 로그인 성공/유지

------------------------------------------------------------------------------------

사용자가 로그인!

아이디/ 비밀번호 서버로 전송 
-> 서버는 DB의 아이디와 비밀번호를 체크함
-> 맞으면 세션/쿠키 생성
-> 메인, 서브페이지의 (대부분 헤더) 로그인 상태 확인하는 구역, 회원별 마이페이지, 회원만 글쓰기 가능한 게시판, 로그인 안돼있으면 접근 불가능한 특정 페이지....
- 페이지 이동 시, 쿠키에 있는 데이터와 세션에 있는 데이터를 비교해서 맞으면 로그인 유지
- 페이지 접속 시, 세션 데이터에 저장돼있는 회원 데이터를 불러와(사용하기 위해)서 ejs파일에 저장

:로그인 검증 위해 필요한 라이브러리
npm install passport
npm install passport-local

: 세션 생성을 빠르게 해주는 라이브러리
npm install express-session